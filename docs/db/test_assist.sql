-- MySQL Script generated by MySQL Workbench
-- 02/04/17 10:33:22
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema test_assist
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `test_assist` ;

-- -----------------------------------------------------
-- Schema test_assist
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `test_assist` DEFAULT CHARACTER SET utf8 ;
USE `test_assist` ;

-- -----------------------------------------------------
-- Table `test_assist`.`league`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `test_assist`.`league` ;

CREATE TABLE IF NOT EXISTS `test_assist`.`league` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `test_assist`.`league` (`name` ASC);


-- -----------------------------------------------------
-- Table `test_assist`.`division`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `test_assist`.`division` ;

CREATE TABLE IF NOT EXISTS `test_assist`.`division` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `league_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_division_league1`
    FOREIGN KEY (`league_id`)
    REFERENCES `test_assist`.`league` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `test_assist`.`division` (`name` ASC);

CREATE INDEX `fk_division_league1_idx` ON `test_assist`.`division` (`league_id` ASC);


-- -----------------------------------------------------
-- Table `test_assist`.`manager`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `test_assist`.`manager` ;

CREATE TABLE IF NOT EXISTS `test_assist`.`manager` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `firstname` VARCHAR(45) NOT NULL,
  `lastname` VARCHAR(45) NOT NULL,
  `phone` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `test_assist`.`team`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `test_assist`.`team` ;

CREATE TABLE IF NOT EXISTS `test_assist`.`team` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `is_active` TINYINT(1) NOT NULL,
  `division_id` INT NOT NULL,
  `manager_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_team_division1`
    FOREIGN KEY (`division_id`)
    REFERENCES `test_assist`.`division` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_team_manager1`
    FOREIGN KEY (`manager_id`)
    REFERENCES `test_assist`.`manager` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = big5;

CREATE UNIQUE INDEX `name_UNIQUE` ON `test_assist`.`team` (`name` ASC);

CREATE INDEX `fk_team_division1_idx` ON `test_assist`.`team` (`division_id` ASC);

CREATE INDEX `fk_team_manager1_idx` ON `test_assist`.`team` (`manager_id` ASC);


-- -----------------------------------------------------
-- Table `test_assist`.`season`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `test_assist`.`season` ;

CREATE TABLE IF NOT EXISTS `test_assist`.`season` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `test_assist`.`season` (`name` ASC);


-- -----------------------------------------------------
-- Table `test_assist`.`split`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `test_assist`.`split` ;

CREATE TABLE IF NOT EXISTS `test_assist`.`split` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `test_assist`.`split` (`name` ASC);


-- -----------------------------------------------------
-- Table `test_assist`.`session`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `test_assist`.`session` ;

CREATE TABLE IF NOT EXISTS `test_assist`.`session` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `season_id` INT NOT NULL,
  `split_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_session_season1`
    FOREIGN KEY (`season_id`)
    REFERENCES `test_assist`.`season` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_session_split1`
    FOREIGN KEY (`split_id`)
    REFERENCES `test_assist`.`split` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_session_season1_idx` ON `test_assist`.`session` (`season_id` ASC);

CREATE INDEX `fk_session_split1_idx` ON `test_assist`.`session` (`split_id` ASC);


-- -----------------------------------------------------
-- Table `test_assist`.`roster`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `test_assist`.`roster` ;

CREATE TABLE IF NOT EXISTS `test_assist`.`roster` (
  `roster_id` INT NOT NULL AUTO_INCREMENT,
  `session_id` INT NOT NULL,
  `team_id` INT NOT NULL,
  PRIMARY KEY (`roster_id`),
  CONSTRAINT `fk_roster_session1`
    FOREIGN KEY (`session_id`)
    REFERENCES `test_assist`.`session` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_roster_team1`
    FOREIGN KEY (`team_id`)
    REFERENCES `test_assist`.`team` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_roster_session1_idx` ON `test_assist`.`roster` (`session_id` ASC);

CREATE INDEX `fk_roster_team1_idx` ON `test_assist`.`roster` (`team_id` ASC);


-- -----------------------------------------------------
-- Table `test_assist`.`player`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `test_assist`.`player` ;

CREATE TABLE IF NOT EXISTS `test_assist`.`player` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `firstname` VARCHAR(45) NOT NULL,
  `lastname` VARCHAR(45) NOT NULL,
  `birthday` DATE NOT NULL,
  `is_active` TINYINT(1) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `team_id` INT NOT NULL,
  `roster_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_player_team1`
    FOREIGN KEY (`team_id`)
    REFERENCES `test_assist`.`team` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_player_roster1`
    FOREIGN KEY (`roster_id`)
    REFERENCES `test_assist`.`roster` (`roster_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '	';

CREATE UNIQUE INDEX `email_UNIQUE` ON `test_assist`.`player` (`email` ASC);

CREATE INDEX `fk_player_team1_idx` ON `test_assist`.`player` (`team_id` ASC);

CREATE INDEX `fk_player_roster1_idx` ON `test_assist`.`player` (`roster_id` ASC);


-- -----------------------------------------------------
-- Table `test_assist`.`pitch`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `test_assist`.`pitch` ;

CREATE TABLE IF NOT EXISTS `test_assist`.`pitch` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `location` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `test_assist`.`pitch` (`name` ASC);


-- -----------------------------------------------------
-- Table `test_assist`.`match`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `test_assist`.`match` ;

CREATE TABLE IF NOT EXISTS `test_assist`.`match` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `play_dt` DATE NOT NULL,
  `pitch_id` INT NOT NULL,
  `session_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_match_pitch1`
    FOREIGN KEY (`pitch_id`)
    REFERENCES `test_assist`.`pitch` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_match_session1`
    FOREIGN KEY (`session_id`)
    REFERENCES `test_assist`.`session` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_match_pitch1_idx` ON `test_assist`.`match` (`pitch_id` ASC);

CREATE INDEX `fk_match_session1_idx` ON `test_assist`.`match` (`session_id` ASC);


-- -----------------------------------------------------
-- Table `test_assist`.`official`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `test_assist`.`official` ;

CREATE TABLE IF NOT EXISTS `test_assist`.`official` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `firstname` VARCHAR(45) NOT NULL,
  `lastname` VARCHAR(45) NOT NULL,
  `phone` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `phone_UNIQUE` ON `test_assist`.`official` (`phone` ASC);

CREATE UNIQUE INDEX `email_UNIQUE` ON `test_assist`.`official` (`email` ASC);

CREATE UNIQUE INDEX `lastname_UNIQUE` ON `test_assist`.`official` (`lastname` ASC);

CREATE UNIQUE INDEX `firstname_UNIQUE` ON `test_assist`.`official` (`firstname` ASC);


-- -----------------------------------------------------
-- Table `test_assist`.`matchup`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `test_assist`.`matchup` ;

CREATE TABLE IF NOT EXISTS `test_assist`.`matchup` (
  `match_id` INT NOT NULL,
  `roster_id` INT NOT NULL,
  CONSTRAINT `fk_matchup_match1`
    FOREIGN KEY (`match_id`)
    REFERENCES `test_assist`.`match` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_matchup_roster1`
    FOREIGN KEY (`roster_id`)
    REFERENCES `test_assist`.`roster` (`roster_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_matchup_match1_idx` ON `test_assist`.`matchup` (`match_id` ASC);

CREATE INDEX `fk_matchup_roster1_idx` ON `test_assist`.`matchup` (`roster_id` ASC);


-- -----------------------------------------------------
-- Table `test_assist`.`match_official`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `test_assist`.`match_official` ;

CREATE TABLE IF NOT EXISTS `test_assist`.`match_official` (
  `match_id` INT NOT NULL,
  `official_id` INT NOT NULL,
  CONSTRAINT `fk_match_official_match1`
    FOREIGN KEY (`match_id`)
    REFERENCES `test_assist`.`match` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_match_official_official1`
    FOREIGN KEY (`official_id`)
    REFERENCES `test_assist`.`official` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_match_official_match1_idx` ON `test_assist`.`match_official` (`match_id` ASC);

CREATE INDEX `fk_match_official_official1_idx` ON `test_assist`.`match_official` (`official_id` ASC);


-- -----------------------------------------------------
-- Table `test_assist`.`availability_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `test_assist`.`availability_type` ;

CREATE TABLE IF NOT EXISTS `test_assist`.`availability_type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `type_UNIQUE` ON `test_assist`.`availability_type` (`type` ASC);


-- -----------------------------------------------------
-- Table `test_assist`.`availability`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `test_assist`.`availability` ;

CREATE TABLE IF NOT EXISTS `test_assist`.`availability` (
  `player_id` INT NOT NULL,
  `match_id` INT NOT NULL,
  `availability_type_id` INT NOT NULL,
  CONSTRAINT `fk_availability_player1`
    FOREIGN KEY (`player_id`)
    REFERENCES `test_assist`.`player` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_availability_match1`
    FOREIGN KEY (`match_id`)
    REFERENCES `test_assist`.`match` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_availability_availability_type1`
    FOREIGN KEY (`availability_type_id`)
    REFERENCES `test_assist`.`availability_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_availability_player1_idx` ON `test_assist`.`availability` (`player_id` ASC);

CREATE INDEX `fk_availability_match1_idx` ON `test_assist`.`availability` (`match_id` ASC);

CREATE INDEX `fk_availability_availability_type1_idx` ON `test_assist`.`availability` (`availability_type_id` ASC);


-- -----------------------------------------------------
-- Table `test_assist`.`league_manager`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `test_assist`.`league_manager` ;

CREATE TABLE IF NOT EXISTS `test_assist`.`league_manager` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `firstname` VARCHAR(45) NOT NULL,
  `lastname` VARCHAR(45) NOT NULL,
  `phone` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `test_assist`.`acting_manager`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `test_assist`.`acting_manager` ;

CREATE TABLE IF NOT EXISTS `test_assist`.`acting_manager` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `league_manager_id` INT NOT NULL,
  `season_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_acting_manager_league_manager1`
    FOREIGN KEY (`league_manager_id`)
    REFERENCES `test_assist`.`league_manager` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_acting_manager_season1`
    FOREIGN KEY (`season_id`)
    REFERENCES `test_assist`.`season` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '			';

CREATE INDEX `fk_acting_manager_league_manager1_idx` ON `test_assist`.`acting_manager` (`league_manager_id` ASC);

CREATE INDEX `fk_acting_manager_season1_idx` ON `test_assist`.`acting_manager` (`season_id` ASC);

SET SQL_MODE = '';
GRANT USAGE ON *.* TO bnisler;
 DROP USER bnisler;
SET SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';
CREATE USER 'bnisler' IDENTIFIED BY 'password';

GRANT ALL ON `test_assist`.* TO 'bnisler';
SET SQL_MODE = '';
GRANT USAGE ON *.* TO player;
 DROP USER player;
SET SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';
CREATE USER 'player' IDENTIFIED BY 'password';

GRANT SELECT ON TABLE `test_assist`.* TO 'player';

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `test_assist`.`league`
-- -----------------------------------------------------
START TRANSACTION;
USE `test_assist`;
INSERT INTO `test_assist`.`league` (`id`, `name`) VALUES (1, 'Madison Soccer Association');

COMMIT;


-- -----------------------------------------------------
-- Data for table `test_assist`.`division`
-- -----------------------------------------------------
START TRANSACTION;
USE `test_assist`;
INSERT INTO `test_assist`.`division` (`id`, `name`, `league_id`) VALUES (1, 'Div 1', 1);
INSERT INTO `test_assist`.`division` (`id`, `name`, `league_id`) VALUES (2, 'Div 2', 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `test_assist`.`manager`
-- -----------------------------------------------------
START TRANSACTION;
USE `test_assist`;
INSERT INTO `test_assist`.`manager` (`id`, `firstname`, `lastname`, `phone`, `email`) VALUES (1, 'Ryan', 'Smith', '123456789', 'rsmith@gmail.com');
INSERT INTO `test_assist`.`manager` (`id`, `firstname`, `lastname`, `phone`, `email`) VALUES (2, 'Jeff', 'N', '5559876', 'jeffn@gmail.com');

COMMIT;


-- -----------------------------------------------------
-- Data for table `test_assist`.`team`
-- -----------------------------------------------------
START TRANSACTION;
USE `test_assist`;
INSERT INTO `test_assist`.`team` (`id`, `name`, `is_active`, `division_id`, `manager_id`) VALUES (1, 'FC Metro', true, 2, 1);
INSERT INTO `test_assist`.`team` (`id`, `name`, `is_active`, `division_id`, `manager_id`) VALUES (2, 'Have Fun FC', true, 2, 2);

COMMIT;


-- -----------------------------------------------------
-- Data for table `test_assist`.`season`
-- -----------------------------------------------------
START TRANSACTION;
USE `test_assist`;
INSERT INTO `test_assist`.`season` (`id`, `name`) VALUES (1, 'Fall2016/Spring2017');

COMMIT;


-- -----------------------------------------------------
-- Data for table `test_assist`.`split`
-- -----------------------------------------------------
START TRANSACTION;
USE `test_assist`;
INSERT INTO `test_assist`.`split` (`id`, `name`) VALUES (1, 'Fall');
INSERT INTO `test_assist`.`split` (`id`, `name`) VALUES (2, 'Spring');

COMMIT;


-- -----------------------------------------------------
-- Data for table `test_assist`.`session`
-- -----------------------------------------------------
START TRANSACTION;
USE `test_assist`;
INSERT INTO `test_assist`.`session` (`id`, `season_id`, `split_id`) VALUES (1, 1, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `test_assist`.`roster`
-- -----------------------------------------------------
START TRANSACTION;
USE `test_assist`;
INSERT INTO `test_assist`.`roster` (`roster_id`, `session_id`, `team_id`) VALUES (1, 1, 1);
INSERT INTO `test_assist`.`roster` (`roster_id`, `session_id`, `team_id`) VALUES (2, 1, 2);

COMMIT;


-- -----------------------------------------------------
-- Data for table `test_assist`.`player`
-- -----------------------------------------------------
START TRANSACTION;
USE `test_assist`;
INSERT INTO `test_assist`.`player` (`id`, `firstname`, `lastname`, `birthday`, `is_active`, `email`, `team_id`, `roster_id`) VALUES (1, 'Benjamin', 'Nisler', '1986-04-23', true, 'bnisler@gmail.com', 1, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `test_assist`.`pitch`
-- -----------------------------------------------------
START TRANSACTION;
USE `test_assist`;
INSERT INTO `test_assist`.`pitch` (`id`, `name`, `location`) VALUES (1, 'Goodman Field', 'Reddan Soccer Complex');

COMMIT;


-- -----------------------------------------------------
-- Data for table `test_assist`.`match`
-- -----------------------------------------------------
START TRANSACTION;
USE `test_assist`;
INSERT INTO `test_assist`.`match` (`id`, `play_dt`, `pitch_id`, `session_id`) VALUES (1, '2017-03-01', 1, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `test_assist`.`official`
-- -----------------------------------------------------
START TRANSACTION;
USE `test_assist`;
INSERT INTO `test_assist`.`official` (`id`, `firstname`, `lastname`, `phone`, `email`) VALUES (1, 'Raj', 'H', '5551234', 'raj@gmail.com');

COMMIT;


-- -----------------------------------------------------
-- Data for table `test_assist`.`matchup`
-- -----------------------------------------------------
START TRANSACTION;
USE `test_assist`;
INSERT INTO `test_assist`.`matchup` (`match_id`, `roster_id`) VALUES (1, 1);
INSERT INTO `test_assist`.`matchup` (`match_id`, `roster_id`) VALUES (1, 2);

COMMIT;


-- -----------------------------------------------------
-- Data for table `test_assist`.`match_official`
-- -----------------------------------------------------
START TRANSACTION;
USE `test_assist`;
INSERT INTO `test_assist`.`match_official` (`match_id`, `official_id`) VALUES (1, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `test_assist`.`availability_type`
-- -----------------------------------------------------
START TRANSACTION;
USE `test_assist`;
INSERT INTO `test_assist`.`availability_type` (`id`, `type`) VALUES (1, 'YES');
INSERT INTO `test_assist`.`availability_type` (`id`, `type`) VALUES (2, 'NO');
INSERT INTO `test_assist`.`availability_type` (`id`, `type`) VALUES (3, 'MAYBE');

COMMIT;


-- -----------------------------------------------------
-- Data for table `test_assist`.`availability`
-- -----------------------------------------------------
START TRANSACTION;
USE `test_assist`;
INSERT INTO `test_assist`.`availability` (`player_id`, `match_id`, `availability_type_id`) VALUES (1, 1, 1);
INSERT INTO `test_assist`.`availability` (`player_id`, `match_id`, `availability_type_id`) VALUES (2, 1, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `test_assist`.`league_manager`
-- -----------------------------------------------------
START TRANSACTION;
USE `test_assist`;
INSERT INTO `test_assist`.`league_manager` (`id`, `firstname`, `lastname`, `phone`, `email`) VALUES (1, 'Boomer', 'E', '987654321', 'boom@gmail.com');

COMMIT;


-- -----------------------------------------------------
-- Data for table `test_assist`.`acting_manager`
-- -----------------------------------------------------
START TRANSACTION;
USE `test_assist`;
INSERT INTO `test_assist`.`acting_manager` (`id`, `league_manager_id`, `season_id`) VALUES (1, 1, 1);

COMMIT;

