-- MySQL Script generated by MySQL Workbench
-- 05/09/17 10:37:22
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema assist
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `assist` ;

-- -----------------------------------------------------
-- Schema assist
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `assist` DEFAULT CHARACTER SET utf8 ;
USE `assist` ;

-- -----------------------------------------------------
-- Table `assist`.`league`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `assist`.`league` ;

CREATE TABLE IF NOT EXISTS `assist`.`league` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `assist`.`league` (`name` ASC);


-- -----------------------------------------------------
-- Table `assist`.`division`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `assist`.`division` ;

CREATE TABLE IF NOT EXISTS `assist`.`division` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `league_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_division_league1`
    FOREIGN KEY (`league_id`)
    REFERENCES `assist`.`league` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `assist`.`division` (`name` ASC);

CREATE INDEX `fk_division_league1_idx` ON `assist`.`division` (`league_id` ASC);


-- -----------------------------------------------------
-- Table `assist`.`manager`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `assist`.`manager` ;

CREATE TABLE IF NOT EXISTS `assist`.`manager` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `firstname` VARCHAR(45) NOT NULL,
  `lastname` VARCHAR(45) NOT NULL,
  `phone` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = '						';


-- -----------------------------------------------------
-- Table `assist`.`team`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `assist`.`team` ;

CREATE TABLE IF NOT EXISTS `assist`.`team` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `is_active` TINYINT(1) NOT NULL,
  `division_id` INT NULL,
  `manager_id` INT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_team_division1`
    FOREIGN KEY (`division_id`)
    REFERENCES `assist`.`division` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_team_manager1`
    FOREIGN KEY (`manager_id`)
    REFERENCES `assist`.`manager` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = big5;

CREATE UNIQUE INDEX `name_UNIQUE` ON `assist`.`team` (`name` ASC);

CREATE INDEX `fk_team_division1_idx` ON `assist`.`team` (`division_id` ASC);

CREATE INDEX `fk_team_manager1_idx` ON `assist`.`team` (`manager_id` ASC);


-- -----------------------------------------------------
-- Table `assist`.`player`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `assist`.`player` ;

CREATE TABLE IF NOT EXISTS `assist`.`player` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `firstname` VARCHAR(45) NOT NULL,
  `lastname` VARCHAR(45) NOT NULL,
  `birthday` DATE NOT NULL,
  `is_active` TINYINT(1) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `team_id` INT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_player_team1`
    FOREIGN KEY (`team_id`)
    REFERENCES `assist`.`team` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '	';

CREATE UNIQUE INDEX `email_UNIQUE` ON `assist`.`player` (`email` ASC);

CREATE INDEX `fk_player_team1_idx` ON `assist`.`player` (`team_id` ASC);


-- -----------------------------------------------------
-- Table `assist`.`pitch`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `assist`.`pitch` ;

CREATE TABLE IF NOT EXISTS `assist`.`pitch` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `location` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `assist`.`pitch` (`name` ASC);


-- -----------------------------------------------------
-- Table `assist`.`season`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `assist`.`season` ;

CREATE TABLE IF NOT EXISTS `assist`.`season` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `is_active` TINYINT(1) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `assist`.`season` (`name` ASC);


-- -----------------------------------------------------
-- Table `assist`.`split`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `assist`.`split` ;

CREATE TABLE IF NOT EXISTS `assist`.`split` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `assist`.`split` (`name` ASC);


-- -----------------------------------------------------
-- Table `assist`.`session`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `assist`.`session` ;

CREATE TABLE IF NOT EXISTS `assist`.`session` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `year` INT NOT NULL,
  `season_id` INT NOT NULL,
  `split_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_session_season1`
    FOREIGN KEY (`season_id`)
    REFERENCES `assist`.`season` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_session_split1`
    FOREIGN KEY (`split_id`)
    REFERENCES `assist`.`split` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '			';

CREATE INDEX `fk_session_season1_idx` ON `assist`.`session` (`season_id` ASC);

CREATE INDEX `fk_session_split1_idx` ON `assist`.`session` (`split_id` ASC);

CREATE UNIQUE INDEX `uc_session` ON `assist`.`session` (`season_id` ASC, `split_id` ASC);


-- -----------------------------------------------------
-- Table `assist`.`match`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `assist`.`match` ;

CREATE TABLE IF NOT EXISTS `assist`.`match` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `play_dtm` DATETIME NOT NULL,
  `pitch_id` INT NOT NULL,
  `session_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_match_pitch1`
    FOREIGN KEY (`pitch_id`)
    REFERENCES `assist`.`pitch` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_match_session1`
    FOREIGN KEY (`session_id`)
    REFERENCES `assist`.`session` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_match_pitch1_idx` ON `assist`.`match` (`pitch_id` ASC);

CREATE INDEX `fk_match_session1_idx` ON `assist`.`match` (`session_id` ASC);


-- -----------------------------------------------------
-- Table `assist`.`official`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `assist`.`official` ;

CREATE TABLE IF NOT EXISTS `assist`.`official` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `firstname` VARCHAR(45) NOT NULL,
  `lastname` VARCHAR(45) NOT NULL,
  `phone` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `phone_UNIQUE` ON `assist`.`official` (`phone` ASC);

CREATE UNIQUE INDEX `email_UNIQUE` ON `assist`.`official` (`email` ASC);

CREATE UNIQUE INDEX `lastname_UNIQUE` ON `assist`.`official` (`lastname` ASC);

CREATE UNIQUE INDEX `firstname_UNIQUE` ON `assist`.`official` (`firstname` ASC);


-- -----------------------------------------------------
-- Table `assist`.`roster`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `assist`.`roster` ;

CREATE TABLE IF NOT EXISTS `assist`.`roster` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `session_id` INT NOT NULL,
  `team_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_roster_session1`
    FOREIGN KEY (`session_id`)
    REFERENCES `assist`.`session` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_roster_team1`
    FOREIGN KEY (`team_id`)
    REFERENCES `assist`.`team` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_roster_session1_idx` ON `assist`.`roster` (`session_id` ASC);

CREATE INDEX `fk_roster_team1_idx` ON `assist`.`roster` (`team_id` ASC);

CREATE UNIQUE INDEX `uc_session_team` ON `assist`.`roster` (`session_id` ASC, `team_id` ASC)  COMMENT 'Only allow 1 roster per team per session.';


-- -----------------------------------------------------
-- Table `assist`.`matchup`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `assist`.`matchup` ;

CREATE TABLE IF NOT EXISTS `assist`.`matchup` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `match_id` INT NOT NULL,
  `roster_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_matchup_match1`
    FOREIGN KEY (`match_id`)
    REFERENCES `assist`.`match` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_matchup_roster1`
    FOREIGN KEY (`roster_id`)
    REFERENCES `assist`.`roster` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_matchup_match1_idx` ON `assist`.`matchup` (`match_id` ASC);

CREATE INDEX `fk_matchup_roster1_idx` ON `assist`.`matchup` (`roster_id` ASC);

CREATE UNIQUE INDEX `uc_match_roster` ON `assist`.`matchup` (`match_id` ASC, `roster_id` ASC);


-- -----------------------------------------------------
-- Table `assist`.`match_official`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `assist`.`match_official` ;

CREATE TABLE IF NOT EXISTS `assist`.`match_official` (
  `match_id` INT NOT NULL,
  `official_id` INT NOT NULL,
  CONSTRAINT `fk_match_official_match1`
    FOREIGN KEY (`match_id`)
    REFERENCES `assist`.`match` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_match_official_official1`
    FOREIGN KEY (`official_id`)
    REFERENCES `assist`.`official` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_match_official_match1_idx` ON `assist`.`match_official` (`match_id` ASC);

CREATE INDEX `fk_match_official_official1_idx` ON `assist`.`match_official` (`official_id` ASC);


-- -----------------------------------------------------
-- Table `assist`.`availability_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `assist`.`availability_type` ;

CREATE TABLE IF NOT EXISTS `assist`.`availability_type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `type_UNIQUE` ON `assist`.`availability_type` (`type` ASC);


-- -----------------------------------------------------
-- Table `assist`.`availability`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `assist`.`availability` ;

CREATE TABLE IF NOT EXISTS `assist`.`availability` (
  `player_id` INT NOT NULL,
  `match_id` INT NOT NULL,
  `availability_type_id` INT NOT NULL,
  CONSTRAINT `fk_availability_player1`
    FOREIGN KEY (`player_id`)
    REFERENCES `assist`.`player` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_availability_match1`
    FOREIGN KEY (`match_id`)
    REFERENCES `assist`.`match` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_availability_availability_type1`
    FOREIGN KEY (`availability_type_id`)
    REFERENCES `assist`.`availability_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_availability_player1_idx` ON `assist`.`availability` (`player_id` ASC);

CREATE INDEX `fk_availability_match1_idx` ON `assist`.`availability` (`match_id` ASC);

CREATE INDEX `fk_availability_availability_type1_idx` ON `assist`.`availability` (`availability_type_id` ASC);


-- -----------------------------------------------------
-- Table `assist`.`league_manager`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `assist`.`league_manager` ;

CREATE TABLE IF NOT EXISTS `assist`.`league_manager` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `firstname` VARCHAR(45) NOT NULL,
  `lastname` VARCHAR(45) NOT NULL,
  `phone` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `assist`.`acting_manager`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `assist`.`acting_manager` ;

CREATE TABLE IF NOT EXISTS `assist`.`acting_manager` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `league_manager_id` INT NOT NULL,
  `season_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_acting_manager_league_manager1`
    FOREIGN KEY (`league_manager_id`)
    REFERENCES `assist`.`league_manager` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_acting_manager_season1`
    FOREIGN KEY (`season_id`)
    REFERENCES `assist`.`season` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '			';

CREATE INDEX `fk_acting_manager_league_manager1_idx` ON `assist`.`acting_manager` (`league_manager_id` ASC);

CREATE INDEX `fk_acting_manager_season1_idx` ON `assist`.`acting_manager` (`season_id` ASC);


-- -----------------------------------------------------
-- Table `assist`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `assist`.`user` ;

CREATE TABLE IF NOT EXISTS `assist`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NOT NULL,
  `password` VARCHAR(60) NOT NULL,
  `is_active` TINYINT(1) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `username_UNIQUE` ON `assist`.`user` (`username` ASC);


-- -----------------------------------------------------
-- Table `assist`.`role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `assist`.`role` ;

CREATE TABLE IF NOT EXISTS `assist`.`role` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `role` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = '		';

CREATE UNIQUE INDEX `role_UNIQUE` ON `assist`.`role` (`role` ASC);


-- -----------------------------------------------------
-- Table `assist`.`commit`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `assist`.`commit` ;

CREATE TABLE IF NOT EXISTS `assist`.`commit` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `player_id` INT NOT NULL,
  `roster_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_commit_player1`
    FOREIGN KEY (`player_id`)
    REFERENCES `assist`.`player` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_commit_roster1`
    FOREIGN KEY (`roster_id`)
    REFERENCES `assist`.`roster` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_commit_player1_idx` ON `assist`.`commit` (`player_id` ASC);

CREATE INDEX `fk_commit_roster1_idx` ON `assist`.`commit` (`roster_id` ASC);

CREATE UNIQUE INDEX `uc_player_roster` ON `assist`.`commit` (`player_id` ASC, `roster_id` ASC);


-- -----------------------------------------------------
-- Table `assist`.`user_role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `assist`.`user_role` ;

CREATE TABLE IF NOT EXISTS `assist`.`user_role` (
  `user_id` INT NOT NULL,
  `role_id` INT NOT NULL,
  CONSTRAINT `fk_user_role_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `assist`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_role_role1`
    FOREIGN KEY (`role_id`)
    REFERENCES `assist`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_user_role_user1_idx` ON `assist`.`user_role` (`user_id` ASC);

CREATE INDEX `fk_user_role_role1_idx` ON `assist`.`user_role` (`role_id` ASC);

CREATE UNIQUE INDEX `uc_user_role` ON `assist`.`user_role` (`user_id` ASC, `role_id` ASC);

SET SQL_MODE = '';
GRANT USAGE ON *.* TO bnisler;
 DROP USER bnisler;
SET SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';
CREATE USER 'bnisler' IDENTIFIED BY 'password';

GRANT ALL ON `assist`.* TO 'bnisler';
SET SQL_MODE = '';
GRANT USAGE ON *.* TO web;
 DROP USER web;
SET SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';
CREATE USER 'web' IDENTIFIED BY 'Password1';

GRANT ALL ON `assist`.* TO 'web';

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `assist`.`league`
-- -----------------------------------------------------
START TRANSACTION;
USE `assist`;
INSERT INTO `assist`.`league` (`id`, `name`) VALUES (1, 'Madison Soccer Association');

COMMIT;


-- -----------------------------------------------------
-- Data for table `assist`.`division`
-- -----------------------------------------------------
START TRANSACTION;
USE `assist`;
INSERT INTO `assist`.`division` (`id`, `name`, `league_id`) VALUES (1, 'Div 1', 1);
INSERT INTO `assist`.`division` (`id`, `name`, `league_id`) VALUES (2, 'Div 2', 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `assist`.`manager`
-- -----------------------------------------------------
START TRANSACTION;
USE `assist`;
INSERT INTO `assist`.`manager` (`id`, `firstname`, `lastname`, `phone`, `email`) VALUES (1, 'Super', 'Star', '5555555', 'ss@mail.com');

COMMIT;


-- -----------------------------------------------------
-- Data for table `assist`.`team`
-- -----------------------------------------------------
START TRANSACTION;
USE `assist`;
INSERT INTO `assist`.`team` (`id`, `name`, `is_active`, `division_id`, `manager_id`) VALUES (1, 'FC Metro', true, 2, 1);
INSERT INTO `assist`.`team` (`id`, `name`, `is_active`, `division_id`, `manager_id`) VALUES (2, 'Have Fun FC', true, 2, NULL);
INSERT INTO `assist`.`team` (`id`, `name`, `is_active`, `division_id`, `manager_id`) VALUES (3, 'Bulldogs', true, 2, NULL);
INSERT INTO `assist`.`team` (`id`, `name`, `is_active`, `division_id`, `manager_id`) VALUES (4, 'Chivas', true, 2, NULL);
INSERT INTO `assist`.`team` (`id`, `name`, `is_active`, `division_id`, `manager_id`) VALUES (5, 'Hotspurs', true, 2, NULL);
INSERT INTO `assist`.`team` (`id`, `name`, `is_active`, `division_id`, `manager_id`) VALUES (6, 'Deportivo', true, 1, NULL);
INSERT INTO `assist`.`team` (`id`, `name`, `is_active`, `division_id`, `manager_id`) VALUES (7, 'Paradigm', true, 1, NULL);
INSERT INTO `assist`.`team` (`id`, `name`, `is_active`, `division_id`, `manager_id`) VALUES (8, 'Epic', true, 2, NULL);
INSERT INTO `assist`.`team` (`id`, `name`, `is_active`, `division_id`, `manager_id`) VALUES (9, 'Vilas Rangers', true, 2, NULL);
INSERT INTO `assist`.`team` (`id`, `name`, `is_active`, `division_id`, `manager_id`) VALUES (10, 'Madison United', true, 1, NULL);
INSERT INTO `assist`.`team` (`id`, `name`, `is_active`, `division_id`, `manager_id`) VALUES (11, 'Madison Fire', true, 1, NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `assist`.`player`
-- -----------------------------------------------------
START TRANSACTION;
USE `assist`;
INSERT INTO `assist`.`player` (`id`, `firstname`, `lastname`, `birthday`, `is_active`, `email`, `team_id`) VALUES (1, 'Benjamin', 'Ni', '1986-01-01', true, 'bn@mail.com', 1);
INSERT INTO `assist`.`player` (`id`, `firstname`, `lastname`, `birthday`, `is_active`, `email`, `team_id`) VALUES (2, 'Jeff', 'N', '1984-01-01', true, 'jeffn@gmail.com', 2);
INSERT INTO `assist`.`player` (`id`, `firstname`, `lastname`, `birthday`, `is_active`, `email`, `team_id`) VALUES (3, 'AJ', 'G', '1984-01-01', true, 'guti@gmail.com', 8);
INSERT INTO `assist`.`player` (`id`, `firstname`, `lastname`, `birthday`, `is_active`, `email`, `team_id`) VALUES (4, 'Player', 'Soccer', '1988-01-01', true, 'ps@gmail.com', NULL);
INSERT INTO `assist`.`player` (`id`, `firstname`, `lastname`, `birthday`, `is_active`, `email`, `team_id`) VALUES (5, 'John', 'Doe', '1990-01-01', true, 'jd@mail.com', NULL);
INSERT INTO `assist`.`player` (`id`, `firstname`, `lastname`, `birthday`, `is_active`, `email`, `team_id`) VALUES (6, 'Jane ', 'Doe', '1990-01-01', true, 'jdoe@mail.com', NULL);
INSERT INTO `assist`.`player` (`id`, `firstname`, `lastname`, `birthday`, `is_active`, `email`, `team_id`) VALUES (7, 'Jon', 'Buck', '1989-02-02', true, 'jb@mail.com', NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `assist`.`pitch`
-- -----------------------------------------------------
START TRANSACTION;
USE `assist`;
INSERT INTO `assist`.`pitch` (`id`, `name`, `location`) VALUES (1, 'Goodman Field', 'Reddan Soccer Complex');

COMMIT;


-- -----------------------------------------------------
-- Data for table `assist`.`season`
-- -----------------------------------------------------
START TRANSACTION;
USE `assist`;
INSERT INTO `assist`.`season` (`id`, `name`, `is_active`) VALUES (1, 'Fall2015/Spring2016', true);
INSERT INTO `assist`.`season` (`id`, `name`, `is_active`) VALUES (2, 'Fall2016/Spring2017', true);
INSERT INTO `assist`.`season` (`id`, `name`, `is_active`) VALUES (3, 'Fall2017/Spring2018', true);

COMMIT;


-- -----------------------------------------------------
-- Data for table `assist`.`split`
-- -----------------------------------------------------
START TRANSACTION;
USE `assist`;
INSERT INTO `assist`.`split` (`id`, `name`) VALUES (1, 'Fall');
INSERT INTO `assist`.`split` (`id`, `name`) VALUES (2, 'Spring');

COMMIT;


-- -----------------------------------------------------
-- Data for table `assist`.`session`
-- -----------------------------------------------------
START TRANSACTION;
USE `assist`;
INSERT INTO `assist`.`session` (`id`, `year`, `season_id`, `split_id`) VALUES (1, 2015, 1, 1);
INSERT INTO `assist`.`session` (`id`, `year`, `season_id`, `split_id`) VALUES (2, 2016, 1, 2);
INSERT INTO `assist`.`session` (`id`, `year`, `season_id`, `split_id`) VALUES (3, 2016, 2, 1);
INSERT INTO `assist`.`session` (`id`, `year`, `season_id`, `split_id`) VALUES (4, 2017, 2, 2);

COMMIT;


-- -----------------------------------------------------
-- Data for table `assist`.`match`
-- -----------------------------------------------------
START TRANSACTION;
USE `assist`;
INSERT INTO `assist`.`match` (`id`, `play_dtm`, `pitch_id`, `session_id`) VALUES (1, '2017-03-19 12:00:00', 1, 1);
INSERT INTO `assist`.`match` (`id`, `play_dtm`, `pitch_id`, `session_id`) VALUES (2, '2017-03-19 14:00:00', 1, 1);
INSERT INTO `assist`.`match` (`id`, `play_dtm`, `pitch_id`, `session_id`) VALUES (3, '2017-03-19 16:00:00', 1, 1);
INSERT INTO `assist`.`match` (`id`, `play_dtm`, `pitch_id`, `session_id`) VALUES (4, '2017-03-26 12:00:00', 1, 1);
INSERT INTO `assist`.`match` (`id`, `play_dtm`, `pitch_id`, `session_id`) VALUES (5, '2017-03-26 14:00:00', 1, 1);
INSERT INTO `assist`.`match` (`id`, `play_dtm`, `pitch_id`, `session_id`) VALUES (6, '2017-03-26 16:00:00', 1, 1);
INSERT INTO `assist`.`match` (`id`, `play_dtm`, `pitch_id`, `session_id`) VALUES (7, '2017-03-26 18:00:00', 1, 1);
INSERT INTO `assist`.`match` (`id`, `play_dtm`, `pitch_id`, `session_id`) VALUES (8, '2017-03-26 20:00:00', 1, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `assist`.`official`
-- -----------------------------------------------------
START TRANSACTION;
USE `assist`;
INSERT INTO `assist`.`official` (`id`, `firstname`, `lastname`, `phone`, `email`) VALUES (1, 'Raj', 'H', '5551234', 'raj@gmail.com');

COMMIT;


-- -----------------------------------------------------
-- Data for table `assist`.`roster`
-- -----------------------------------------------------
START TRANSACTION;
USE `assist`;
INSERT INTO `assist`.`roster` (`id`, `session_id`, `team_id`) VALUES (1, 1, 1);
INSERT INTO `assist`.`roster` (`id`, `session_id`, `team_id`) VALUES (2, 1, 2);
INSERT INTO `assist`.`roster` (`id`, `session_id`, `team_id`) VALUES (3, 1, 3);
INSERT INTO `assist`.`roster` (`id`, `session_id`, `team_id`) VALUES (4, 1, 4);
INSERT INTO `assist`.`roster` (`id`, `session_id`, `team_id`) VALUES (5, 1, 5);
INSERT INTO `assist`.`roster` (`id`, `session_id`, `team_id`) VALUES (6, 1, 6);
INSERT INTO `assist`.`roster` (`id`, `session_id`, `team_id`) VALUES (7, 1, 7);
INSERT INTO `assist`.`roster` (`id`, `session_id`, `team_id`) VALUES (8, 1, 8);
INSERT INTO `assist`.`roster` (`id`, `session_id`, `team_id`) VALUES (9, 1, 9);
INSERT INTO `assist`.`roster` (`id`, `session_id`, `team_id`) VALUES (10, 1, 10);
INSERT INTO `assist`.`roster` (`id`, `session_id`, `team_id`) VALUES (11, 1, 11);

COMMIT;


-- -----------------------------------------------------
-- Data for table `assist`.`matchup`
-- -----------------------------------------------------
START TRANSACTION;
USE `assist`;
INSERT INTO `assist`.`matchup` (`id`, `match_id`, `roster_id`) VALUES (DEFAULT, 1, 1);
INSERT INTO `assist`.`matchup` (`id`, `match_id`, `roster_id`) VALUES (DEFAULT, 1, 8);
INSERT INTO `assist`.`matchup` (`id`, `match_id`, `roster_id`) VALUES (DEFAULT, 2, 7);
INSERT INTO `assist`.`matchup` (`id`, `match_id`, `roster_id`) VALUES (DEFAULT, 2, 11);
INSERT INTO `assist`.`matchup` (`id`, `match_id`, `roster_id`) VALUES (DEFAULT, 3, 10);
INSERT INTO `assist`.`matchup` (`id`, `match_id`, `roster_id`) VALUES (DEFAULT, 3, 6);
INSERT INTO `assist`.`matchup` (`id`, `match_id`, `roster_id`) VALUES (DEFAULT, 4, 10);
INSERT INTO `assist`.`matchup` (`id`, `match_id`, `roster_id`) VALUES (DEFAULT, 4, 7);
INSERT INTO `assist`.`matchup` (`id`, `match_id`, `roster_id`) VALUES (DEFAULT, 5, 6);
INSERT INTO `assist`.`matchup` (`id`, `match_id`, `roster_id`) VALUES (DEFAULT, 5, 11);
INSERT INTO `assist`.`matchup` (`id`, `match_id`, `roster_id`) VALUES (DEFAULT, 6, 3);
INSERT INTO `assist`.`matchup` (`id`, `match_id`, `roster_id`) VALUES (DEFAULT, 6, 9);
INSERT INTO `assist`.`matchup` (`id`, `match_id`, `roster_id`) VALUES (DEFAULT, 7, 8);
INSERT INTO `assist`.`matchup` (`id`, `match_id`, `roster_id`) VALUES (DEFAULT, 7, 4);
INSERT INTO `assist`.`matchup` (`id`, `match_id`, `roster_id`) VALUES (DEFAULT, 8, 5);
INSERT INTO `assist`.`matchup` (`id`, `match_id`, `roster_id`) VALUES (DEFAULT, 8, 2);

COMMIT;


-- -----------------------------------------------------
-- Data for table `assist`.`match_official`
-- -----------------------------------------------------
START TRANSACTION;
USE `assist`;
INSERT INTO `assist`.`match_official` (`match_id`, `official_id`) VALUES (1, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `assist`.`availability_type`
-- -----------------------------------------------------
START TRANSACTION;
USE `assist`;
INSERT INTO `assist`.`availability_type` (`id`, `type`) VALUES (1, 'YES');
INSERT INTO `assist`.`availability_type` (`id`, `type`) VALUES (2, 'NO');
INSERT INTO `assist`.`availability_type` (`id`, `type`) VALUES (3, 'MAYBE');

COMMIT;


-- -----------------------------------------------------
-- Data for table `assist`.`availability`
-- -----------------------------------------------------
START TRANSACTION;
USE `assist`;
INSERT INTO `assist`.`availability` (`player_id`, `match_id`, `availability_type_id`) VALUES (1, 1, 1);
INSERT INTO `assist`.`availability` (`player_id`, `match_id`, `availability_type_id`) VALUES (2, 1, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `assist`.`league_manager`
-- -----------------------------------------------------
START TRANSACTION;
USE `assist`;
INSERT INTO `assist`.`league_manager` (`id`, `firstname`, `lastname`, `phone`, `email`) VALUES (1, 'Boomer', 'E', '987654321', 'boom@gmail.com');

COMMIT;


-- -----------------------------------------------------
-- Data for table `assist`.`acting_manager`
-- -----------------------------------------------------
START TRANSACTION;
USE `assist`;
INSERT INTO `assist`.`acting_manager` (`id`, `league_manager_id`, `season_id`) VALUES (1, 1, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `assist`.`user`
-- -----------------------------------------------------
START TRANSACTION;
USE `assist`;
INSERT INTO `assist`.`user` (`id`, `username`, `password`, `is_active`) VALUES (1, 'bnisler', '$2a$10$6VkhrnCqNeECdDYnAvg4nu9UoexITalK2cExKEQEaARV8q4rlLGZi', true);
INSERT INTO `assist`.`user` (`id`, `username`, `password`, `is_active`) VALUES (2, 'guest', '$2a$10$88MEhrKz/HGCVEH3ae63MOOLNk4KFz4LnzuT6iXhxZ.Ag0a1oNgiq', true);

COMMIT;


-- -----------------------------------------------------
-- Data for table `assist`.`role`
-- -----------------------------------------------------
START TRANSACTION;
USE `assist`;
INSERT INTO `assist`.`role` (`id`, `role`) VALUES (1, 'ROLE_ADMIN');
INSERT INTO `assist`.`role` (`id`, `role`) VALUES (2, 'ROLE_USER');

COMMIT;


-- -----------------------------------------------------
-- Data for table `assist`.`commit`
-- -----------------------------------------------------
START TRANSACTION;
USE `assist`;
INSERT INTO `assist`.`commit` (`id`, `player_id`, `roster_id`) VALUES (1, 1, 1);
INSERT INTO `assist`.`commit` (`id`, `player_id`, `roster_id`) VALUES (2, 2, 2);

COMMIT;


-- -----------------------------------------------------
-- Data for table `assist`.`user_role`
-- -----------------------------------------------------
START TRANSACTION;
USE `assist`;
INSERT INTO `assist`.`user_role` (`user_id`, `role_id`) VALUES (1, 1);
INSERT INTO `assist`.`user_role` (`user_id`, `role_id`) VALUES (1, 2);
INSERT INTO `assist`.`user_role` (`user_id`, `role_id`) VALUES (2, 2);

COMMIT;

